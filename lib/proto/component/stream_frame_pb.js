/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var github_com_mwitkow_go$proto$validators_validator_pb = require('../github.com/mwitkow/go-proto-validators/validator_pb.js');
goog.object.extend(proto, github_com_mwitkow_go$proto$validators_validator_pb);
goog.exportSymbol('proto.ai.metathings.component.DownStreamFrame', null, global);
goog.exportSymbol('proto.ai.metathings.component.ErrorValue', null, global);
goog.exportSymbol('proto.ai.metathings.component.OpStreamCallAck', null, global);
goog.exportSymbol('proto.ai.metathings.component.OpStreamCallConfig', null, global);
goog.exportSymbol('proto.ai.metathings.component.OpStreamCallExit', null, global);
goog.exportSymbol('proto.ai.metathings.component.OpStreamCallValue', null, global);
goog.exportSymbol('proto.ai.metathings.component.OpUnaryCallValue', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallAck', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallConfig', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallExit', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallValue', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamFrameKind', null, global);
goog.exportSymbol('proto.ai.metathings.component.UnaryCallValue', null, global);
goog.exportSymbol('proto.ai.metathings.component.UpStreamFrame', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.OpStreamCallConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.OpStreamCallConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.OpStreamCallConfig.displayName = 'proto.ai.metathings.component.OpStreamCallConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.OpStreamCallConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.OpStreamCallConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: (f = msg.getSession()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    method: (f = msg.getMethod()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    ack: (f = msg.getAck()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.OpStreamCallConfig}
 */
proto.ai.metathings.component.OpStreamCallConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.OpStreamCallConfig;
  return proto.ai.metathings.component.OpStreamCallConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.OpStreamCallConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.OpStreamCallConfig}
 */
proto.ai.metathings.component.OpStreamCallConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMethod(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.OpStreamCallConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.OpStreamCallConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value session = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.getSession = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/** @param {?proto.google.protobuf.Int64Value|undefined} value */
proto.ai.metathings.component.OpStreamCallConfig.prototype.setSession = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.OpStreamCallConfig.prototype.clearSession = function() {
  this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.hasSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue method = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.getMethod = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.ai.metathings.component.OpStreamCallConfig.prototype.setMethod = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ai.metathings.component.OpStreamCallConfig.prototype.clearMethod = function() {
  this.setMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int64Value ack = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.getAck = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 3));
};


/** @param {?proto.google.protobuf.Int64Value|undefined} value */
proto.ai.metathings.component.OpStreamCallConfig.prototype.setAck = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ai.metathings.component.OpStreamCallConfig.prototype.clearAck = function() {
  this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallConfig.prototype.hasAck = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallConfig.displayName = 'proto.ai.metathings.component.StreamCallConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ack: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallConfig}
 */
proto.ai.metathings.component.StreamCallConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallConfig;
  return proto.ai.metathings.component.StreamCallConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallConfig}
 */
proto.ai.metathings.component.StreamCallConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSession(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAck();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 session = 1;
 * @return {number}
 */
proto.ai.metathings.component.StreamCallConfig.prototype.getSession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ai.metathings.component.StreamCallConfig.prototype.setSession = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.ai.metathings.component.StreamCallConfig.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ai.metathings.component.StreamCallConfig.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 ack = 3;
 * @return {number}
 */
proto.ai.metathings.component.StreamCallConfig.prototype.getAck = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ai.metathings.component.StreamCallConfig.prototype.setAck = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.OpStreamCallAck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.OpStreamCallAck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.OpStreamCallAck.displayName = 'proto.ai.metathings.component.OpStreamCallAck';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.OpStreamCallAck.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.OpStreamCallAck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.OpStreamCallAck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallAck.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.OpStreamCallAck}
 */
proto.ai.metathings.component.OpStreamCallAck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.OpStreamCallAck;
  return proto.ai.metathings.component.OpStreamCallAck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.OpStreamCallAck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.OpStreamCallAck}
 */
proto.ai.metathings.component.OpStreamCallAck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.OpStreamCallAck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.OpStreamCallAck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.OpStreamCallAck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallAck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value value = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.ai.metathings.component.OpStreamCallAck.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/** @param {?proto.google.protobuf.Int64Value|undefined} value */
proto.ai.metathings.component.OpStreamCallAck.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.OpStreamCallAck.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallAck.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallAck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallAck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallAck.displayName = 'proto.ai.metathings.component.StreamCallAck';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallAck.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallAck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallAck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallAck.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallAck}
 */
proto.ai.metathings.component.StreamCallAck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallAck;
  return proto.ai.metathings.component.StreamCallAck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallAck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallAck}
 */
proto.ai.metathings.component.StreamCallAck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallAck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallAck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallAck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallAck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.ai.metathings.component.StreamCallAck.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ai.metathings.component.StreamCallAck.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.OpStreamCallExit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.OpStreamCallExit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.OpStreamCallExit.displayName = 'proto.ai.metathings.component.OpStreamCallExit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.OpStreamCallExit.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.OpStreamCallExit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.OpStreamCallExit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallExit.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.OpStreamCallExit}
 */
proto.ai.metathings.component.OpStreamCallExit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.OpStreamCallExit;
  return proto.ai.metathings.component.OpStreamCallExit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.OpStreamCallExit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.OpStreamCallExit}
 */
proto.ai.metathings.component.OpStreamCallExit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.OpStreamCallExit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.OpStreamCallExit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.OpStreamCallExit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallExit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallExit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallExit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallExit.displayName = 'proto.ai.metathings.component.StreamCallExit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallExit.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallExit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallExit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallExit.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallExit}
 */
proto.ai.metathings.component.StreamCallExit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallExit;
  return proto.ai.metathings.component.StreamCallExit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallExit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallExit}
 */
proto.ai.metathings.component.StreamCallExit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallExit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallExit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallExit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallExit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.OpUnaryCallValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.OpUnaryCallValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.OpUnaryCallValue.displayName = 'proto.ai.metathings.component.OpUnaryCallValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.OpUnaryCallValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.OpUnaryCallValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpUnaryCallValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: (f = msg.getSession()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    method: (f = msg.getMethod()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.OpUnaryCallValue}
 */
proto.ai.metathings.component.OpUnaryCallValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.OpUnaryCallValue;
  return proto.ai.metathings.component.OpUnaryCallValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.OpUnaryCallValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.OpUnaryCallValue}
 */
proto.ai.metathings.component.OpUnaryCallValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMethod(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.OpUnaryCallValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.OpUnaryCallValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpUnaryCallValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value session = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.getSession = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/** @param {?proto.google.protobuf.Int64Value|undefined} value */
proto.ai.metathings.component.OpUnaryCallValue.prototype.setSession = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.OpUnaryCallValue.prototype.clearSession = function() {
  this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.hasSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue method = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.getMethod = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.ai.metathings.component.OpUnaryCallValue.prototype.setMethod = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ai.metathings.component.OpUnaryCallValue.prototype.clearMethod = function() {
  this.setMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any value = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.OpUnaryCallValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ai.metathings.component.OpUnaryCallValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpUnaryCallValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.UnaryCallValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.UnaryCallValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.UnaryCallValue.displayName = 'proto.ai.metathings.component.UnaryCallValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.UnaryCallValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.UnaryCallValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.UnaryCallValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.UnaryCallValue}
 */
proto.ai.metathings.component.UnaryCallValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.UnaryCallValue;
  return proto.ai.metathings.component.UnaryCallValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.UnaryCallValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.UnaryCallValue}
 */
proto.ai.metathings.component.UnaryCallValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSession(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.UnaryCallValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.UnaryCallValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.UnaryCallValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 session = 1;
 * @return {number}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.getSession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ai.metathings.component.UnaryCallValue.prototype.setSession = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ai.metathings.component.UnaryCallValue.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Any value = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.UnaryCallValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ai.metathings.component.UnaryCallValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.UnaryCallValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.OpStreamCallValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.OpStreamCallValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.OpStreamCallValue.displayName = 'proto.ai.metathings.component.OpStreamCallValue';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.OpStreamCallValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.OpStreamCallValue.UnionCase = {
  UNION_NOT_SET: 0,
  VALUE: 1,
  CONFIG: 2,
  ACK: 3,
  EXIT: 4
};

/**
 * @return {proto.ai.metathings.component.OpStreamCallValue.UnionCase}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.getUnionCase = function() {
  return /** @type {proto.ai.metathings.component.OpStreamCallValue.UnionCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.OpStreamCallValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.OpStreamCallValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.ai.metathings.component.OpStreamCallConfig.toObject(includeInstance, f),
    ack: (f = msg.getAck()) && proto.ai.metathings.component.OpStreamCallAck.toObject(includeInstance, f),
    exit: (f = msg.getExit()) && proto.ai.metathings.component.OpStreamCallExit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.OpStreamCallValue}
 */
proto.ai.metathings.component.OpStreamCallValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.OpStreamCallValue;
  return proto.ai.metathings.component.OpStreamCallValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.OpStreamCallValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.OpStreamCallValue}
 */
proto.ai.metathings.component.OpStreamCallValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.ai.metathings.component.OpStreamCallConfig;
      reader.readMessage(value,proto.ai.metathings.component.OpStreamCallConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new proto.ai.metathings.component.OpStreamCallAck;
      reader.readMessage(value,proto.ai.metathings.component.OpStreamCallAck.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 4:
      var value = new proto.ai.metathings.component.OpStreamCallExit;
      reader.readMessage(value,proto.ai.metathings.component.OpStreamCallExit.deserializeBinaryFromReader);
      msg.setExit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.OpStreamCallValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.OpStreamCallValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.OpStreamCallValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.metathings.component.OpStreamCallConfig.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.metathings.component.OpStreamCallAck.serializeBinaryToWriter
    );
  }
  f = message.getExit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ai.metathings.component.OpStreamCallExit.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.OpStreamCallValue.prototype.setValue = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.OpStreamCallValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OpStreamCallConfig config = 2;
 * @return {?proto.ai.metathings.component.OpStreamCallConfig}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.getConfig = function() {
  return /** @type{?proto.ai.metathings.component.OpStreamCallConfig} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.OpStreamCallConfig, 2));
};


/** @param {?proto.ai.metathings.component.OpStreamCallConfig|undefined} value */
proto.ai.metathings.component.OpStreamCallValue.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.OpStreamCallValue.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OpStreamCallAck ack = 3;
 * @return {?proto.ai.metathings.component.OpStreamCallAck}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.getAck = function() {
  return /** @type{?proto.ai.metathings.component.OpStreamCallAck} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.OpStreamCallAck, 3));
};


/** @param {?proto.ai.metathings.component.OpStreamCallAck|undefined} value */
proto.ai.metathings.component.OpStreamCallValue.prototype.setAck = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.OpStreamCallValue.prototype.clearAck = function() {
  this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.hasAck = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OpStreamCallExit exit = 4;
 * @return {?proto.ai.metathings.component.OpStreamCallExit}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.getExit = function() {
  return /** @type{?proto.ai.metathings.component.OpStreamCallExit} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.OpStreamCallExit, 4));
};


/** @param {?proto.ai.metathings.component.OpStreamCallExit|undefined} value */
proto.ai.metathings.component.OpStreamCallValue.prototype.setExit = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ai.metathings.component.OpStreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.OpStreamCallValue.prototype.clearExit = function() {
  this.setExit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.OpStreamCallValue.prototype.hasExit = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.StreamCallValue.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.StreamCallValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallValue.displayName = 'proto.ai.metathings.component.StreamCallValue';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.StreamCallValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.StreamCallValue.UnionCase = {
  UNION_NOT_SET: 0,
  VALUE: 1,
  CONFIG: 2,
  ACK: 3,
  EXIT: 4
};

/**
 * @return {proto.ai.metathings.component.StreamCallValue.UnionCase}
 */
proto.ai.metathings.component.StreamCallValue.prototype.getUnionCase = function() {
  return /** @type {proto.ai.metathings.component.StreamCallValue.UnionCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.StreamCallValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.ai.metathings.component.StreamCallConfig.toObject(includeInstance, f),
    ack: (f = msg.getAck()) && proto.ai.metathings.component.StreamCallAck.toObject(includeInstance, f),
    exit: (f = msg.getExit()) && proto.ai.metathings.component.StreamCallExit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallValue}
 */
proto.ai.metathings.component.StreamCallValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallValue;
  return proto.ai.metathings.component.StreamCallValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallValue}
 */
proto.ai.metathings.component.StreamCallValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new proto.ai.metathings.component.StreamCallConfig;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new proto.ai.metathings.component.StreamCallAck;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallAck.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 4:
      var value = new proto.ai.metathings.component.StreamCallExit;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallExit.deserializeBinaryFromReader);
      msg.setExit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.metathings.component.StreamCallConfig.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.metathings.component.StreamCallAck.serializeBinaryToWriter
    );
  }
  f = message.getExit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ai.metathings.component.StreamCallExit.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.StreamCallValue.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.StreamCallValue.prototype.setValue = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.metathings.component.StreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StreamCallConfig config = 2;
 * @return {?proto.ai.metathings.component.StreamCallConfig}
 */
proto.ai.metathings.component.StreamCallValue.prototype.getConfig = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallConfig} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallConfig, 2));
};


/** @param {?proto.ai.metathings.component.StreamCallConfig|undefined} value */
proto.ai.metathings.component.StreamCallValue.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.metathings.component.StreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallValue.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallValue.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StreamCallAck ack = 3;
 * @return {?proto.ai.metathings.component.StreamCallAck}
 */
proto.ai.metathings.component.StreamCallValue.prototype.getAck = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallAck} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallAck, 3));
};


/** @param {?proto.ai.metathings.component.StreamCallAck|undefined} value */
proto.ai.metathings.component.StreamCallValue.prototype.setAck = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.metathings.component.StreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallValue.prototype.clearAck = function() {
  this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallValue.prototype.hasAck = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StreamCallExit exit = 4;
 * @return {?proto.ai.metathings.component.StreamCallExit}
 */
proto.ai.metathings.component.StreamCallValue.prototype.getExit = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallExit} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallExit, 4));
};


/** @param {?proto.ai.metathings.component.StreamCallExit|undefined} value */
proto.ai.metathings.component.StreamCallValue.prototype.setExit = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ai.metathings.component.StreamCallValue.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallValue.prototype.clearExit = function() {
  this.setExit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallValue.prototype.hasExit = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.ErrorValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.ErrorValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.ErrorValue.displayName = 'proto.ai.metathings.component.ErrorValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.ErrorValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.ErrorValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.ErrorValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.ErrorValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.ErrorValue}
 */
proto.ai.metathings.component.ErrorValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.ErrorValue;
  return proto.ai.metathings.component.ErrorValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.ErrorValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.ErrorValue}
 */
proto.ai.metathings.component.ErrorValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.ErrorValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.ErrorValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.ErrorValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.ErrorValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 code = 1;
 * @return {number}
 */
proto.ai.metathings.component.ErrorValue.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ai.metathings.component.ErrorValue.prototype.setCode = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ai.metathings.component.ErrorValue.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ai.metathings.component.ErrorValue.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.UpStreamFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.UpStreamFrame.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.UpStreamFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.UpStreamFrame.displayName = 'proto.ai.metathings.component.UpStreamFrame';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.UpStreamFrame.oneofGroups_ = [[2,3,9]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.UpStreamFrame.UnionCase = {
  UNION_NOT_SET: 0,
  UNARY_CALL: 2,
  STREAM_CALL: 3,
  ERROR: 9
};

/**
 * @return {proto.ai.metathings.component.UpStreamFrame.UnionCase}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.getUnionCase = function() {
  return /** @type {proto.ai.metathings.component.UpStreamFrame.UnionCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.UpStreamFrame.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.UpStreamFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.UpStreamFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.UpStreamFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unaryCall: (f = msg.getUnaryCall()) && proto.ai.metathings.component.UnaryCallValue.toObject(includeInstance, f),
    streamCall: (f = msg.getStreamCall()) && proto.ai.metathings.component.StreamCallValue.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.ai.metathings.component.ErrorValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.UpStreamFrame}
 */
proto.ai.metathings.component.UpStreamFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.UpStreamFrame;
  return proto.ai.metathings.component.UpStreamFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.UpStreamFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.UpStreamFrame}
 */
proto.ai.metathings.component.UpStreamFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.metathings.component.StreamFrameKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = new proto.ai.metathings.component.UnaryCallValue;
      reader.readMessage(value,proto.ai.metathings.component.UnaryCallValue.deserializeBinaryFromReader);
      msg.setUnaryCall(value);
      break;
    case 3:
      var value = new proto.ai.metathings.component.StreamCallValue;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallValue.deserializeBinaryFromReader);
      msg.setStreamCall(value);
      break;
    case 9:
      var value = new proto.ai.metathings.component.ErrorValue;
      reader.readMessage(value,proto.ai.metathings.component.ErrorValue.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.UpStreamFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.UpStreamFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.UpStreamFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUnaryCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.metathings.component.UnaryCallValue.serializeBinaryToWriter
    );
  }
  f = message.getStreamCall();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.metathings.component.StreamCallValue.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ai.metathings.component.ErrorValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional StreamFrameKind kind = 1;
 * @return {!proto.ai.metathings.component.StreamFrameKind}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.getKind = function() {
  return /** @type {!proto.ai.metathings.component.StreamFrameKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ai.metathings.component.StreamFrameKind} value */
proto.ai.metathings.component.UpStreamFrame.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional UnaryCallValue unary_call = 2;
 * @return {?proto.ai.metathings.component.UnaryCallValue}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.getUnaryCall = function() {
  return /** @type{?proto.ai.metathings.component.UnaryCallValue} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.UnaryCallValue, 2));
};


/** @param {?proto.ai.metathings.component.UnaryCallValue|undefined} value */
proto.ai.metathings.component.UpStreamFrame.prototype.setUnaryCall = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.metathings.component.UpStreamFrame.oneofGroups_[0], value);
};


proto.ai.metathings.component.UpStreamFrame.prototype.clearUnaryCall = function() {
  this.setUnaryCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.hasUnaryCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StreamCallValue stream_call = 3;
 * @return {?proto.ai.metathings.component.StreamCallValue}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.getStreamCall = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallValue} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallValue, 3));
};


/** @param {?proto.ai.metathings.component.StreamCallValue|undefined} value */
proto.ai.metathings.component.UpStreamFrame.prototype.setStreamCall = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.metathings.component.UpStreamFrame.oneofGroups_[0], value);
};


proto.ai.metathings.component.UpStreamFrame.prototype.clearStreamCall = function() {
  this.setStreamCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.hasStreamCall = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ErrorValue error = 9;
 * @return {?proto.ai.metathings.component.ErrorValue}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.getError = function() {
  return /** @type{?proto.ai.metathings.component.ErrorValue} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.ErrorValue, 9));
};


/** @param {?proto.ai.metathings.component.ErrorValue|undefined} value */
proto.ai.metathings.component.UpStreamFrame.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.ai.metathings.component.UpStreamFrame.oneofGroups_[0], value);
};


proto.ai.metathings.component.UpStreamFrame.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.UpStreamFrame.prototype.hasError = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.DownStreamFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.DownStreamFrame.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.DownStreamFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.DownStreamFrame.displayName = 'proto.ai.metathings.component.DownStreamFrame';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.DownStreamFrame.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.DownStreamFrame.UnionCase = {
  UNION_NOT_SET: 0,
  UNARY_CALL: 2,
  STREAM_CALL: 3
};

/**
 * @return {proto.ai.metathings.component.DownStreamFrame.UnionCase}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.getUnionCase = function() {
  return /** @type {proto.ai.metathings.component.DownStreamFrame.UnionCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.DownStreamFrame.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.DownStreamFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.DownStreamFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.DownStreamFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unaryCall: (f = msg.getUnaryCall()) && proto.ai.metathings.component.OpUnaryCallValue.toObject(includeInstance, f),
    streamCall: (f = msg.getStreamCall()) && proto.ai.metathings.component.OpStreamCallValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.DownStreamFrame}
 */
proto.ai.metathings.component.DownStreamFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.DownStreamFrame;
  return proto.ai.metathings.component.DownStreamFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.DownStreamFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.DownStreamFrame}
 */
proto.ai.metathings.component.DownStreamFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ai.metathings.component.StreamFrameKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = new proto.ai.metathings.component.OpUnaryCallValue;
      reader.readMessage(value,proto.ai.metathings.component.OpUnaryCallValue.deserializeBinaryFromReader);
      msg.setUnaryCall(value);
      break;
    case 3:
      var value = new proto.ai.metathings.component.OpStreamCallValue;
      reader.readMessage(value,proto.ai.metathings.component.OpStreamCallValue.deserializeBinaryFromReader);
      msg.setStreamCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.DownStreamFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.DownStreamFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.DownStreamFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUnaryCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ai.metathings.component.OpUnaryCallValue.serializeBinaryToWriter
    );
  }
  f = message.getStreamCall();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ai.metathings.component.OpStreamCallValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional StreamFrameKind kind = 1;
 * @return {!proto.ai.metathings.component.StreamFrameKind}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.getKind = function() {
  return /** @type {!proto.ai.metathings.component.StreamFrameKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ai.metathings.component.StreamFrameKind} value */
proto.ai.metathings.component.DownStreamFrame.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional OpUnaryCallValue unary_call = 2;
 * @return {?proto.ai.metathings.component.OpUnaryCallValue}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.getUnaryCall = function() {
  return /** @type{?proto.ai.metathings.component.OpUnaryCallValue} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.OpUnaryCallValue, 2));
};


/** @param {?proto.ai.metathings.component.OpUnaryCallValue|undefined} value */
proto.ai.metathings.component.DownStreamFrame.prototype.setUnaryCall = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ai.metathings.component.DownStreamFrame.oneofGroups_[0], value);
};


proto.ai.metathings.component.DownStreamFrame.prototype.clearUnaryCall = function() {
  this.setUnaryCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.hasUnaryCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OpStreamCallValue stream_call = 3;
 * @return {?proto.ai.metathings.component.OpStreamCallValue}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.getStreamCall = function() {
  return /** @type{?proto.ai.metathings.component.OpStreamCallValue} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.OpStreamCallValue, 3));
};


/** @param {?proto.ai.metathings.component.OpStreamCallValue|undefined} value */
proto.ai.metathings.component.DownStreamFrame.prototype.setStreamCall = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ai.metathings.component.DownStreamFrame.oneofGroups_[0], value);
};


proto.ai.metathings.component.DownStreamFrame.prototype.clearStreamCall = function() {
  this.setStreamCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.DownStreamFrame.prototype.hasStreamCall = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.ai.metathings.component.StreamFrameKind = {
  STREAM_FRAME_KIND_UNKNOWN: 0,
  STREAM_FRAME_KIND_SYSTEM: 1,
  STREAM_FRAME_KIND_USER: 2
};

goog.object.extend(exports, proto.ai.metathings.component);
