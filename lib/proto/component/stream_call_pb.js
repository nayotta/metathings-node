/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var github_com_mwitkow_go$proto$validators_validator_pb = require('../github.com/mwitkow/go-proto-validators/validator_pb.js');
goog.object.extend(proto, github_com_mwitkow_go$proto$validators_validator_pb);
goog.exportSymbol('proto.ai.metathings.component.StreamCallConfigRequest', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallConfigResponse', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallDataRequest', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallDataResponse', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallRequest', null, global);
goog.exportSymbol('proto.ai.metathings.component.StreamCallResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.StreamCallRequest.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.StreamCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallRequest.displayName = 'proto.ai.metathings.component.StreamCallRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.StreamCallRequest.oneofGroups_ = [[1,21]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.StreamCallRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  CONFIG: 1,
  DATA: 21
};

/**
 * @return {proto.ai.metathings.component.StreamCallRequest.RequestCase}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.getRequestCase = function() {
  return /** @type {proto.ai.metathings.component.StreamCallRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.StreamCallRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.ai.metathings.component.StreamCallConfigRequest.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.ai.metathings.component.StreamCallDataRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallRequest}
 */
proto.ai.metathings.component.StreamCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallRequest;
  return proto.ai.metathings.component.StreamCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallRequest}
 */
proto.ai.metathings.component.StreamCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.metathings.component.StreamCallConfigRequest;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallConfigRequest.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 21:
      var value = new proto.ai.metathings.component.StreamCallDataRequest;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallDataRequest.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.metathings.component.StreamCallConfigRequest.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.ai.metathings.component.StreamCallDataRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional StreamCallConfigRequest config = 1;
 * @return {?proto.ai.metathings.component.StreamCallConfigRequest}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.getConfig = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallConfigRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallConfigRequest, 1));
};


/** @param {?proto.ai.metathings.component.StreamCallConfigRequest|undefined} value */
proto.ai.metathings.component.StreamCallRequest.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.metathings.component.StreamCallRequest.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallRequest.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StreamCallDataRequest data = 21;
 * @return {?proto.ai.metathings.component.StreamCallDataRequest}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.getData = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallDataRequest, 21));
};


/** @param {?proto.ai.metathings.component.StreamCallDataRequest|undefined} value */
proto.ai.metathings.component.StreamCallRequest.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.ai.metathings.component.StreamCallRequest.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallConfigRequest.displayName = 'proto.ai.metathings.component.StreamCallConfigRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: (f = msg.getMethod()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallConfigRequest}
 */
proto.ai.metathings.component.StreamCallConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallConfigRequest;
  return proto.ai.metathings.component.StreamCallConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallConfigRequest}
 */
proto.ai.metathings.component.StreamCallConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue method = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.ai.metathings.component.StreamCallConfigRequest.prototype.getMethod = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.ai.metathings.component.StreamCallConfigRequest.prototype.setMethod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.StreamCallConfigRequest.prototype.clearMethod = function() {
  this.setMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallConfigRequest.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallDataRequest.displayName = 'proto.ai.metathings.component.StreamCallDataRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallDataRequest}
 */
proto.ai.metathings.component.StreamCallDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallDataRequest;
  return proto.ai.metathings.component.StreamCallDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallDataRequest}
 */
proto.ai.metathings.component.StreamCallDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.StreamCallDataRequest.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.StreamCallDataRequest.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.StreamCallDataRequest.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallDataRequest.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ai.metathings.component.StreamCallResponse.oneofGroups_);
};
goog.inherits(proto.ai.metathings.component.StreamCallResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallResponse.displayName = 'proto.ai.metathings.component.StreamCallResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ai.metathings.component.StreamCallResponse.oneofGroups_ = [[1,21]];

/**
 * @enum {number}
 */
proto.ai.metathings.component.StreamCallResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  CONFIG: 1,
  DATA: 21
};

/**
 * @return {proto.ai.metathings.component.StreamCallResponse.ResponseCase}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.getResponseCase = function() {
  return /** @type {proto.ai.metathings.component.StreamCallResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.ai.metathings.component.StreamCallResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.ai.metathings.component.StreamCallConfigResponse.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.ai.metathings.component.StreamCallDataResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallResponse}
 */
proto.ai.metathings.component.StreamCallResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallResponse;
  return proto.ai.metathings.component.StreamCallResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallResponse}
 */
proto.ai.metathings.component.StreamCallResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.metathings.component.StreamCallConfigResponse;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallConfigResponse.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 21:
      var value = new proto.ai.metathings.component.StreamCallDataResponse;
      reader.readMessage(value,proto.ai.metathings.component.StreamCallDataResponse.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.metathings.component.StreamCallConfigResponse.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.ai.metathings.component.StreamCallDataResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional StreamCallConfigResponse config = 1;
 * @return {?proto.ai.metathings.component.StreamCallConfigResponse}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.getConfig = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallConfigResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallConfigResponse, 1));
};


/** @param {?proto.ai.metathings.component.StreamCallConfigResponse|undefined} value */
proto.ai.metathings.component.StreamCallResponse.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ai.metathings.component.StreamCallResponse.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallResponse.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StreamCallDataResponse data = 21;
 * @return {?proto.ai.metathings.component.StreamCallDataResponse}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.getData = function() {
  return /** @type{?proto.ai.metathings.component.StreamCallDataResponse} */ (
    jspb.Message.getWrapperField(this, proto.ai.metathings.component.StreamCallDataResponse, 21));
};


/** @param {?proto.ai.metathings.component.StreamCallDataResponse|undefined} value */
proto.ai.metathings.component.StreamCallResponse.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.ai.metathings.component.StreamCallResponse.oneofGroups_[0], value);
};


proto.ai.metathings.component.StreamCallResponse.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallConfigResponse.displayName = 'proto.ai.metathings.component.StreamCallConfigResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallConfigResponse}
 */
proto.ai.metathings.component.StreamCallConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallConfigResponse;
  return proto.ai.metathings.component.StreamCallConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallConfigResponse}
 */
proto.ai.metathings.component.StreamCallConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.ai.metathings.component.StreamCallConfigResponse.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ai.metathings.component.StreamCallConfigResponse.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.component.StreamCallDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.metathings.component.StreamCallDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.component.StreamCallDataResponse.displayName = 'proto.ai.metathings.component.StreamCallDataResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.component.StreamCallDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.component.StreamCallDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.component.StreamCallDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.component.StreamCallDataResponse}
 */
proto.ai.metathings.component.StreamCallDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.component.StreamCallDataResponse;
  return proto.ai.metathings.component.StreamCallDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.component.StreamCallDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.component.StreamCallDataResponse}
 */
proto.ai.metathings.component.StreamCallDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.component.StreamCallDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.component.StreamCallDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.component.StreamCallDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.component.StreamCallDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ai.metathings.component.StreamCallDataResponse.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.ai.metathings.component.StreamCallDataResponse.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ai.metathings.component.StreamCallDataResponse.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.metathings.component.StreamCallDataResponse.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.ai.metathings.component);
